services:
  postgres:
    image: postgres:15-alpine
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER}"]
      interval: 10s
      timeout: 5s
      retries: 5
    deploy:
      resources:
        limits:
          memory: 512M
        reservations:
          memory: 256M

  vespa:
    image: vespaengine/vespa
    hostname: vespa
    environment:
      VESPA_CONFIGSERVERS: vespa
      VESPA_IGNORE_NOT_ENOUGH_MEMORY: "true"
    volumes:
      - vespa_data:/opt/vespa/var
    ports:
      - "19071:19071"
      - "8080:8080"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:19071/ApplicationStatus"]
      interval: 10s
      timeout: 10s
      retries: 30
    deploy:
      resources:
        limits:
          memory: 3G
        reservations:
          memory: 2G

  vespa-deploy:
    build:
      context: .
      dockerfile: Dockerfile.vespa-deploy
    depends_on:
      vespa:
        condition: service_healthy
    restart: "no"

  api:
    build: ./api
    environment:
      - DATABASE_URL=${DATABASE_URL}
      - APP_USER=${APP_USER}
      - APP_USER_HASH_BCRYPT=${APP_USER_HASH_BCRYPT}
      - SESSION_SECRET=${SESSION_SECRET}
      - SESSION_TTL_HOURS=${SESSION_TTL_HOURS}
      - LOGIN_RATE_MAX_ATTEMPTS=${LOGIN_RATE_MAX_ATTEMPTS}
      - LOGIN_RATE_WINDOW_SECONDS=${LOGIN_RATE_WINDOW_SECONDS}
    volumes:
      - telethon_session:/sessions
    depends_on:
      postgres:
        condition: service_healthy
      vespa-deploy:
        condition: service_completed_successfully
    ports:
      - "8000:8000"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/healthz"]
      interval: 10s
      timeout: 5s
      retries: 5
    deploy:
      resources:
        limits:
          memory: 512M
        reservations:
          memory: 256M

  ui:
    build: ./ui
    environment:
      - PUBLIC_API_URL=${PUBLIC_API_URL}
      - PUBLIC_VESPA_URL=${PUBLIC_VESPA_URL}
    depends_on:
      - api
    ports:
      - "3000:3000"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000"]
      interval: 10s
      timeout: 5s
      retries: 5
    deploy:
      resources:
        limits:
          memory: 256M
        reservations:
          memory: 128M

  indexer:
    build: ./indexer
    environment:
      - DATABASE_URL=${DATABASE_URL}
      - VESPA_ENDPOINT=http://vespa:8080
    volumes:
      - telethon_session:/sessions
    depends_on:
      postgres:
        condition: service_healthy
      vespa-deploy:
        condition: service_completed_successfully
    deploy:
      resources:
        limits:
          memory: 512M
        reservations:
          memory: 256M

volumes:
  postgres_data:
  vespa_data:
  telethon_session:
